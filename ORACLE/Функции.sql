create or replace FUNCTION GET_DEFAULT_MAX_BOOK_QUANTITY RETURN NUMBER AS 
BEGIN
  RETURN 10;
END GET_DEFAULT_MAX_BOOK_QUANTITY;

create or replace FUNCTION GET_DEFAULT_RETURN_DATE RETURN DATE AS 
BEGIN
  RETURN ADD_MONTHS(SYSDATE, 2);
END GET_DEFAULT_RETURN_DATE;

create or replace FUNCTION GET_UNRETURNED_BOOK_QUANTITY 
(
  CARD_ID IN INTEGER
) RETURN INTEGER AS 
  total INTEGER := 0;
BEGIN
  SELECT
    SUM(NVL(R.Request_Book_Quantity, 0)) INTO total
  FROM Request R
  INNER JOIN Request_Approved RA ON R.Request_ID = RA.Request_Approved_Request_ID AND R.Request_Book_ID = RA.Request_Approved_Book_ID
  WHERE R.Request_Card_ID = CARD_ID AND RA.Request_Approved_Is_Returned = 0;
  RETURN NVL(total, 0);
END GET_UNRETURNED_BOOK_QUANTITY;

create or replace FUNCTION IS_OUTDATED_REQUEST 
(
  REQUEST_DATE IN DATE 
) RETURN INTEGER AS
  res INTEGER;
BEGIN
  SELECT (CASE WHEN request_date < ADD_MONTHS(SYSDATE, -2) THEN 1 ELSE 0 END) INTO res FROM DUAL;
  RETURN RES;
END IS_OUTDATED_REQUEST;

create or replace FUNCTION GET_DEFAULT_EXPIRY_DATE RETURN DATE AS 
BEGIN
  RETURN ADD_MONTHS(SYSDATE, 60);
END GET_DEFAULT_EXPIRY_DATE;